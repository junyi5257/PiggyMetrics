关于Oauth2.0认证
http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html


简述:
"云冲印" ---经过用户(用户名+密码)授权,(弹窗 输入用户名和密码)
                ----去GOOGLE 授权认证服务器
        ----拿到授权信息
            ---获取用户GOOGLE上面的照片信息

概念:
（1） Third-party application：第三方应用程序，本文中又称"客户端"（client），即上一节例子中的"云冲印"。
（2） HTTP service：           HTTP服务提供商，本文中简称"服务提供商"，即上一节例子中的Google。
（3）Resource Owner：          资源所有者，本文中又称"用户"（user）。
（4）User Agent：              用户代理，本文中就是指浏览器。
（5）Authorization server：    认证服务器，即 服务提供商(GOOGLE) 专门用来处理认证的服务器。
（6）Resource server：         资源服务器，即服务提供商(GOOGLE)存放用户生成的资源(图片资源)的服务器。
                              它与认证服务器，可以是同一台服务器，也可以是不同的服务器。

即:OAuth的作用就是让 "客户端(client)" 安全可控地获取"用户(user)"的授权，与"服务商提供商(GOOGLE)"进行互动。

  "客户端"登录授权层以后，"服务提供商"根据令牌的权限范围和有效期，向"客户端"开放用户储存的资料。

流程:

（A）用户打开客户端以后，客户端要求用户给予授权。
（B）用户同意给予客户端授权。
（C）客户端使用上一步获得的授权，向认证服务器申请令牌。
（D）认证服务器对客户端进行认证以后，确认无误，同意发放令牌。
（E）客户端使用令牌，向资源服务器申请获取资源。
（F）资源服务器确认令牌无误，同意向客户端开放资源。


细节:讲解客户端获取授权的四种模式。

客户端必须得到用户的授权(authorization grant)，才能获取令牌(access Token)。

*** 授权码模式(authorization code)
*** 简化模式(implicit)
*** 密码模式(resource owner password credentials) ☆☆☆
*** 客户端模式(client credentials)                 ☆☆☆

授权码模式（authorization code）是
    功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

简化模式（implicit grant type）
    不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了"授权码"这个步骤，因此得名。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。

密码模式（Resource Owner Password Credentials Grant）中，
       用户向客户端提供自己的用户名和密码。客户端使用这些信息，向"服务商提供商"索要授权。

    （A）用户向客户端提供用户名和密码。
    （B）客户端将用户名和密码发给认证服务器，向后者请求令牌。
    （C）认证服务器确认无误后，向客户端提供访问令牌。

     客户端发出的HTTP请求，包含以下参数：
     grant_type：表示授权类型，此处的值固定为"password"，必选项☆☆☆☆。
     username：表示用户名，                          必选项☆☆☆☆。
     password：表示用户的密码，                       必选项☆☆☆☆。
     scope：表示权限范围，可选项。

 POST /token HTTP/1.1
     Host: server.example.com
     Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
     Content-Type: application/x-www-form-urlencoded

     grant_type=password&username=johndoe&password=A3ddj3w




客户端模式（Client Credentials Grant）指
    客户端以自己的名义，而不是以用户的名义，向"服务提供商"进行认证。
    严格地说，客户端模式并不属于OAuth框架所要解决的问题。
    在这种模式中，用户直接向客户端注册，客户端以自己的名义要求"服务提供商"提供服务，其实不存在授权问题。

    客户端发出的HTTP请求，包含以下参数：
    granttype：表示授权类型，此处的值固定为"clientcredentials"，必选项。
    scope：表示权限范围，可选项。

 POST /token HTTP/1.1
     Host: server.example.com
     Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
     Content-Type: application/x-www-form-urlencoded

     grant_type=client_credentials
















